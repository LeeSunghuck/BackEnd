plugins {
    id 'org.springframework.boot' version '3.3.5'
    id 'io.spring.dependency-management' version '1.1.6'
    id 'java'
}

group = 'sole-paradise'
version = '0.0.1-SNAPSHOT'
java.sourceCompatibility = '17'

bootRun {
    environment SPRING_PROFILES_ACTIVE: environment.SPRING_PROFILES_ACTIVE ?: 'local'
}

repositories {
    mavenCentral()
}

dependencies {
    // Spring Boot Starters
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    implementation 'io.projectreactor:reactor-core'

    // Lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testCompileOnly 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'

    // Database
    runtimeOnly 'com.mysql:mysql-connector-j'

    // Error Handling
    implementation 'io.github.wimdeblauwe:error-handling-spring-boot-starter:4.5.0'

    // OpenAPI Documentation
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.6.0'

    // JWT Dependencies
    implementation 'io.jsonwebtoken:jjwt-api:0.11.2'
    implementation 'io.jsonwebtoken:jjwt-impl:0.11.2'
    implementation 'io.jsonwebtoken:jjwt-jackson:0.11.2' // 또는 jjwt-gson

    // Testing
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.withType(Test) {
    useJUnitPlatform()
}

// Java Compile Tasks: Ensure parameter names are retained
tasks.withType(JavaCompile) {
    options.compilerArgs += ["-parameters"]
}
